---
- hosts: k8s_master
  tasks:
    - name: Initializing Kubernetes on the master.
      become: yes
      shell: kubeadm init --pod-network-cidr={{ calico_cidr }}/16 --ignore-preflight-errors=all

    - name: Creating a kube directory on the master for the config files.
      become: yes
      file: 
        path: $HOME/.kube
        state: directory

    - name: Copying the kube config to the kube directory.
      become: yes
      shell: cp -i /etc/kubernetes/admin.conf $HOME/.kube/config

    - name: Downloading the Calico Pod Network manifest.
      get_url: 
        url: "{{ calico_policy_url }}"
        dest: /tmp/calico.yml

    - name: Modifying the Pod network CIDR for Calico.
      replace:
        path: /tmp/calico.yml
        regexp: 192.168.0.0
        replace: "{{ calico_cidr }}"

    - name: Adding the role binding for Calico to Kubernetes.
      become: yes
      shell: kubectl apply -f {{ calico_rbac_url }}

    - name: Applying the Calico Pod Network to Kubernetes.
      become: yes
      k8s:
        src: /tmp/calico.yml

    - name: Deleting the Calico Pod Network manifest from disk.
      file: 
        path: /tmp/calico.yml
        state: absent

    - name: Deploying the Dashboard to Kubernetes.
      become: yes
      shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/src/deploy/recommended/kubernetes-dashboard.yaml

    - name: Creating an service user for the Dashboard.
      become: yes
      k8s:
        state: present
        definition: "{{ lookup('template', '../files/templates/create_user.yml.j2') | from_yaml }}"

    - name: Creating an a role binding for the service user.
      become: yes
      k8s:
        state: present
        definition: "{{ lookup('template', '../files/templates/create_role_binding.yml.j2') | from_yaml }}"

    - name: Retreiving the kubeadm join command.
      become: yes
      shell: kubeadm token create --print-join-command
      register: k8s_join_command

    - name: Retrieving the authentication token for your service user.
      become: yes
      shell: kubectl -n kube-system describe secret $(kubectl -n kube-system get secret | grep {{ k8s_user_name }} | awk '{print $1}') | grep 'token:' | awk '{print $2}'
      register: k8s_user_token 

    - name: Retreiving the kube config.
      become: yes
      shell: cat ~/.kube/config
      register: k8s_config

    - name: Creating a local ~/.kube directory on your workstation.
      local_action:
        module: file
        path: ~/.kube
        state: directory

    - name: Copying authentication token to your workstation.
      local_action: copy content={{ k8s_user_token.stdout }} dest=~/.kube/authentication_token

    - name: Copying ~/.kube/config to your workstation.
      local_action: copy content={{ k8s_config.stdout }} dest=~/.kube/config

- hosts: k8s_nodes
  tasks:
    - name: Joining the nodes to the master.
      become: yes
      shell: "{{ hostvars[groups['k8s_master'][0]]['k8s_join_command']['stdout'] }} --ignore-preflight-errors=all"

    - name: Pausing for 1 minute to allow the nodes to join the cluster and the pods to become READY.
      pause:
        minutes: 1


- hosts: localhost
  gather_facts: no
  tasks:
    - name: Echoing instructions to user.
      debug: msg="Check your ~/.kube directory for secrets. You can now connect to the dashboard by running $(kubectl proxy) and navigating to http://localhost:8001/api/v1/namespaces/kube-system/services/https:kubernetes-dashboard:/proxy/"
